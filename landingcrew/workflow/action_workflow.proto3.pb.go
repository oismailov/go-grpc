// Code generated by protoc-gen-go. DO NOT EDIT.
// source: action_workflow.proto3

package workflow

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ActionRequest struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string            `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Instructions         string            `protobuf:"bytes,3,opt,name=instructions,proto3" json:"instructions,omitempty"`
	InstructionVideo     string            `protobuf:"bytes,4,opt,name=instruction_video,json=instructionVideo,proto3" json:"instruction_video,omitempty"`
	Secrets              map[string]string `protobuf:"bytes,5,rep,name=secrets,proto3" json:"secrets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ActionRequest) Reset()         { *m = ActionRequest{} }
func (m *ActionRequest) String() string { return proto.CompactTextString(m) }
func (*ActionRequest) ProtoMessage()    {}
func (*ActionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_action_workflow_31ab9217e06a2463, []int{0}
}
func (m *ActionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionRequest.Unmarshal(m, b)
}
func (m *ActionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionRequest.Marshal(b, m, deterministic)
}
func (dst *ActionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionRequest.Merge(dst, src)
}
func (m *ActionRequest) XXX_Size() int {
	return xxx_messageInfo_ActionRequest.Size(m)
}
func (m *ActionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ActionRequest proto.InternalMessageInfo

func (m *ActionRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ActionRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ActionRequest) GetInstructions() string {
	if m != nil {
		return m.Instructions
	}
	return ""
}

func (m *ActionRequest) GetInstructionVideo() string {
	if m != nil {
		return m.InstructionVideo
	}
	return ""
}

func (m *ActionRequest) GetSecrets() map[string]string {
	if m != nil {
		return m.Secrets
	}
	return nil
}

type ActionResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Identifier           string   `protobuf:"bytes,2,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Status               string   `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActionResponse) Reset()         { *m = ActionResponse{} }
func (m *ActionResponse) String() string { return proto.CompactTextString(m) }
func (*ActionResponse) ProtoMessage()    {}
func (*ActionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_action_workflow_31ab9217e06a2463, []int{1}
}
func (m *ActionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionResponse.Unmarshal(m, b)
}
func (m *ActionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionResponse.Marshal(b, m, deterministic)
}
func (dst *ActionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionResponse.Merge(dst, src)
}
func (m *ActionResponse) XXX_Size() int {
	return xxx_messageInfo_ActionResponse.Size(m)
}
func (m *ActionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ActionResponse proto.InternalMessageInfo

func (m *ActionResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ActionResponse) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *ActionResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func init() {
	proto.RegisterType((*ActionRequest)(nil), "ActionRequest")
	proto.RegisterMapType((map[string]string)(nil), "ActionRequest.SecretsEntry")
	proto.RegisterType((*ActionResponse)(nil), "ActionResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ActionWorkflowClient is the client API for ActionWorkflow service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ActionWorkflowClient interface {
	New(ctx context.Context, in *ActionRequest, opts ...grpc.CallOption) (*ActionResponse, error)
	Get(ctx context.Context, in *ActionRequest, opts ...grpc.CallOption) (*ActionResponse, error)
	List(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (ActionWorkflow_ListClient, error)
}

type actionWorkflowClient struct {
	cc *grpc.ClientConn
}

func NewActionWorkflowClient(cc *grpc.ClientConn) ActionWorkflowClient {
	return &actionWorkflowClient{cc}
}

func (c *actionWorkflowClient) New(ctx context.Context, in *ActionRequest, opts ...grpc.CallOption) (*ActionResponse, error) {
	out := new(ActionResponse)
	err := c.cc.Invoke(ctx, "/ActionWorkflow/New", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *actionWorkflowClient) Get(ctx context.Context, in *ActionRequest, opts ...grpc.CallOption) (*ActionResponse, error) {
	out := new(ActionResponse)
	err := c.cc.Invoke(ctx, "/ActionWorkflow/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *actionWorkflowClient) List(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (ActionWorkflow_ListClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ActionWorkflow_serviceDesc.Streams[0], "/ActionWorkflow/List", opts...)
	if err != nil {
		return nil, err
	}
	x := &actionWorkflowListClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ActionWorkflow_ListClient interface {
	Recv() (*ActionResponse, error)
	grpc.ClientStream
}

type actionWorkflowListClient struct {
	grpc.ClientStream
}

func (x *actionWorkflowListClient) Recv() (*ActionResponse, error) {
	m := new(ActionResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ActionWorkflowServer is the server API for ActionWorkflow service.
type ActionWorkflowServer interface {
	New(context.Context, *ActionRequest) (*ActionResponse, error)
	Get(context.Context, *ActionRequest) (*ActionResponse, error)
	List(*empty.Empty, ActionWorkflow_ListServer) error
}

func RegisterActionWorkflowServer(s *grpc.Server, srv ActionWorkflowServer) {
	s.RegisterService(&_ActionWorkflow_serviceDesc, srv)
}

func _ActionWorkflow_New_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActionWorkflowServer).New(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ActionWorkflow/New",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActionWorkflowServer).New(ctx, req.(*ActionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ActionWorkflow_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActionWorkflowServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ActionWorkflow/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActionWorkflowServer).Get(ctx, req.(*ActionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ActionWorkflow_List_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ActionWorkflowServer).List(m, &actionWorkflowListServer{stream})
}

type ActionWorkflow_ListServer interface {
	Send(*ActionResponse) error
	grpc.ServerStream
}

type actionWorkflowListServer struct {
	grpc.ServerStream
}

func (x *actionWorkflowListServer) Send(m *ActionResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _ActionWorkflow_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ActionWorkflow",
	HandlerType: (*ActionWorkflowServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "New",
			Handler:    _ActionWorkflow_New_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _ActionWorkflow_Get_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "List",
			Handler:       _ActionWorkflow_List_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "action_workflow.proto3",
}

func init() {
	proto.RegisterFile("action_workflow.proto3", fileDescriptor_action_workflow_31ab9217e06a2463)
}

var fileDescriptor_action_workflow_31ab9217e06a2463 = []byte{
	// 317 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0x4d, 0x4b, 0xc3, 0x40,
	0x10, 0x75, 0x93, 0xb6, 0xe2, 0x58, 0x6b, 0x5d, 0xa4, 0x84, 0x16, 0xa4, 0xe4, 0x54, 0x10, 0xb6,
	0xd2, 0x22, 0x48, 0x6f, 0x1e, 0x8a, 0x17, 0xf1, 0x50, 0x41, 0xbd, 0x95, 0xb6, 0x99, 0x96, 0xa5,
	0x31, 0x5b, 0x77, 0x27, 0x2d, 0xf9, 0x29, 0xfe, 0x54, 0x6f, 0x92, 0x4d, 0x22, 0x09, 0x7a, 0xf0,
	0x96, 0xf7, 0x31, 0x93, 0x37, 0xbc, 0x85, 0xce, 0x62, 0x45, 0x52, 0x45, 0xf3, 0x83, 0xd2, 0xdb,
	0x75, 0xa8, 0x0e, 0x62, 0xa7, 0x15, 0xa9, 0x71, 0xb7, 0xb7, 0x51, 0x6a, 0x13, 0xe2, 0xd0, 0xc2,
	0x65, 0xbc, 0x1e, 0xe2, 0xfb, 0x8e, 0x92, 0x4c, 0xf5, 0xbf, 0x18, 0x9c, 0xdd, 0xdb, 0xb9, 0x19,
	0x7e, 0xc4, 0x68, 0x88, 0xb7, 0xc0, 0x91, 0x81, 0xc7, 0xfa, 0x6c, 0x70, 0x32, 0x73, 0x64, 0xc0,
	0x2f, 0xa1, 0x4e, 0x92, 0x42, 0xf4, 0x1c, 0x4b, 0x65, 0x80, 0xfb, 0xd0, 0x94, 0x91, 0x21, 0x1d,
	0xdb, 0x59, 0xe3, 0xb9, 0x56, 0xac, 0x70, 0xfc, 0x1a, 0x2e, 0x4a, 0x78, 0xbe, 0x97, 0x01, 0x2a,
	0xaf, 0x66, 0x8d, 0xed, 0x92, 0xf0, 0x92, 0xf2, 0xfc, 0x16, 0x8e, 0x0d, 0xae, 0x34, 0x92, 0xf1,
	0xea, 0x7d, 0x77, 0x70, 0x3a, 0xea, 0x89, 0x4a, 0x2e, 0xf1, 0x9c, 0xa9, 0xd3, 0x88, 0x74, 0x32,
	0x2b, 0xbc, 0xdd, 0x09, 0x34, 0xcb, 0x02, 0x6f, 0x83, 0xbb, 0xc5, 0x24, 0x8f, 0x9f, 0x7e, 0xa6,
	0xf9, 0xf7, 0x8b, 0x30, 0xfe, 0xc9, 0x6f, 0xc1, 0xc4, 0xb9, 0x63, 0xfe, 0x1b, 0xb4, 0x8a, 0x5f,
	0x98, 0x9d, 0x8a, 0x0c, 0xfe, 0xba, 0xfd, 0x0a, 0x40, 0x06, 0x18, 0x91, 0x5c, 0x4b, 0xd4, 0xf9,
	0x82, 0x12, 0xc3, 0x3b, 0xd0, 0x30, 0xb4, 0xa0, 0xb8, 0xb8, 0x3f, 0x47, 0xa3, 0x4f, 0x56, 0xac,
	0x7e, 0xcd, 0xcb, 0xe0, 0x03, 0x70, 0x9f, 0xf0, 0xc0, 0x5b, 0xd5, 0xab, 0xba, 0xe7, 0xa2, 0x1a,
	0xc1, 0x3f, 0x4a, 0x9d, 0x0f, 0x48, 0xff, 0x71, 0x8e, 0xa1, 0xf6, 0x28, 0x0d, 0xf1, 0x8e, 0xc8,
	0x2a, 0x16, 0x45, 0xc5, 0x62, 0x9a, 0x56, 0xfc, 0xc7, 0xc8, 0x0d, 0x5b, 0x36, 0xb2, 0x67, 0xf1,
	0x1d, 0x00, 0x00, 0xff, 0xff, 0xd8, 0xc9, 0xa8, 0x9f, 0x2f, 0x02, 0x00, 0x00,
}
